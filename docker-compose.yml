version: '3.8'
services:
  frontend:
    image: frontend
    build:
      context: ./todo_frontend/.
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    image: backend
    build:
      context: ./todo_backend/.
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_USER=postgres
      - SPRING_DATASOURCE_PASSWORD=1015589212
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres/

  postgres:
    image: postgres:14.7-alpine
    container_name: postgres
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1015589212
      - POSTGRES_DB=todo_list
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h postgres" ]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - redis:/data

volumes:
  db-data:
  redis:
